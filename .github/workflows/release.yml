name: Release build

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-release:
    name: Release build for amd64
    runs-on: "ubuntu-20.04"
    container:
      image: debian:bullseye

    steps:
      - name: Install git before checkout
        run: apt-get update && apt-get install -y git

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fix tag
        # Workaround actions/checkout bug
        # https://github.com/actions/checkout/issues/290
        # https://github.com/actions/checkout/issues/882
        run: |
             git config --global --add safe.directory '*'
             git fetch -fv origin tag "${GITHUB_REF_NAME}"

      - uses: actions/setup-go@v3
        with:
          go-version: '1.18.6'

      - name: Install sibench build dependencies
        run: apt-get install -y librados-dev librbd-dev build-essential git

      - name: Build sibench
        run:  make

      - name: tar the release
        run: cd bin && tar -cvzf sibench-amd64.tar.gz sibench

      - name: Upload sibench binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/bin/sibench-amd64.tar.gz
          asset_name: sibench-amd64-${{ github.event.release.tag_name }}.tar.gz
          asset_content_type: application/gzip

  build-and-push-image:
    runs-on: "ubuntu-20.04"
    permissions:
      contents: read
      packages: write

    steps:
      - name: Install git before checkout
        run: sudo apt-get update && sudo apt-get install -y git

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fix tag
        # Workaround actions/checkout bug
        # https://github.com/actions/checkout/issues/290
        # https://github.com/actions/checkout/issues/882
        run: |
             git config --global --add safe.directory '*'
             git fetch -fv origin tag "${GITHUB_REF_NAME}"

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
